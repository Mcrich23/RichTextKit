{"metadata":{"symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"attributedString","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSAttributedString","text":"NSAttributedString","kind":"typeIdentifier"}],"roleHeading":"Instance Property","title":"attributedString","externalID":"s:11RichTextKit0aB7ContextC16attributedStringSo012NSAttributedF0Cvp","modules":[{"name":"RichTextKit"}],"role":"symbol"},"hierarchy":{"paths":[["doc:\/\/RichTextKit\/documentation\/RichTextKit","doc:\/\/RichTextKit\/documentation\/RichTextKit\/RichTextContext"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"attributedString"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSAttributedString","text":"NSAttributedString"},{"text":" { get }","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Note that the property is read-only and not ","type":"text"},{"type":"codeVoice","code":"@Published"},{"text":" ","type":"text"},{"text":"to avoid redrawing the editor when it changes, which is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"done constantly as the user types. We should find a way"},{"text":" ","type":"text"},{"type":"text","text":"to observe this property without this happening."}]},{"type":"paragraph","inlineContent":[{"text":"The best way to observe this property is to use the raw","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"text"},{"type":"text","text":" binding that you pass into your text editor. The"},{"type":"text","text":" "},{"type":"text","text":"editor will however not redraw if you change this value"},{"text":" ","type":"text"},{"type":"text","text":"from the outside, since it aims to avoid costly redraws."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Until then, use "},{"type":"codeVoice","code":"setAttributedString(to:)"},{"type":"text","text":" to change it."}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/RichTextKit\/documentation\/RichTextKit\/RichTextContext\/attributedString"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"The currently attributed string, if any."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/richtextkit\/richtextcontext\/attributedstring"]}],"references":{"doc://RichTextKit/documentation/RichTextKit/RichTextEditor":{"type":"topic","role":"symbol","identifier":"doc:\/\/RichTextKit\/documentation\/RichTextKit\/RichTextEditor","abstract":[{"type":"text","text":"This SwiftUI editor can be used to view and edit rich text."}],"url":"\/documentation\/richtextkit\/richtexteditor","title":"RichTextEditor","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RichTextEditor","kind":"identifier"}],"navigatorTitle":[{"text":"RichTextEditor","kind":"identifier"}]},"doc://RichTextKit/documentation/RichTextKit/RichTextContext/attributedString":{"abstract":[{"type":"text","text":"The currently attributed string, if any."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"attributedString"},{"text":": ","kind":"text"},{"text":"NSAttributedString","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSAttributedString"}],"url":"\/documentation\/richtextkit\/richtextcontext\/attributedstring","type":"topic","title":"attributedString","kind":"symbol","identifier":"doc:\/\/RichTextKit\/documentation\/RichTextKit\/RichTextContext\/attributedString","role":"symbol"},"doc://RichTextKit/documentation/RichTextKit/RichTextContext":{"type":"topic","role":"symbol","identifier":"doc:\/\/RichTextKit\/documentation\/RichTextKit\/RichTextContext","abstract":[{"text":"This observable context can be used to affect and observe a","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/RichTextKit\/documentation\/RichTextKit\/RichTextEditor","isActive":true,"type":"reference"},{"type":"text","text":" and its content."}],"url":"\/documentation\/richtextkit\/richtextcontext","title":"RichTextContext","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"RichTextContext","kind":"identifier"}],"navigatorTitle":[{"text":"RichTextContext","kind":"identifier"}]},"doc://RichTextKit/documentation/RichTextKit":{"abstract":[{"text":"RichTextKit helps you view and edit rich text in SwiftUI, UIKit and AppKit.","type":"text"}],"url":"\/documentation\/richtextkit","identifier":"doc:\/\/RichTextKit\/documentation\/RichTextKit","title":"RichTextKit","role":"collection","type":"topic","kind":"symbol"}}}